<Window x:Class="DotMatrixAnimationDesigner.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
        xmlns:local="clr-namespace:DotMatrixAnimationDesigner"
        xmlns:communication="clr-namespace:DotMatrixAnimationDesigner.Communication"
        xmlns:components="clr-namespace:DotMatrixAnimationDesigner.Components"
        xmlns:s="clr-namespace:System;assembly=mscorlib"
        Background="{StaticResource MainBackgroundColor}"
        WindowStyle="None" 
        WindowStartupLocation="CenterScreen"
        Title="DotMatrixAnimationDesigner"
        Height="720"
        Width="1080">
    
    <Window.Resources>
        <Style x:Key="widthAndHeightInputBox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MainTextBoxStyleBase}">
            <Setter Property="Width" Value="50" />
            <Setter Property="Height" Value="25" />
            <Setter Property="VerticalAlignment" Value="Bottom" />
            <Setter Property="VerticalContentAlignment" Value="Bottom" />
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}"/>
                </Trigger>
            </Style.Triggers>
        </Style>

        <s:Boolean x:Key="True">True</s:Boolean>
        <s:Boolean x:Key="False">False</s:Boolean>

        <ObjectDataProvider x:Key="transmitOptions"
                            MethodName="GetValues"
                            ObjectType="{x:Type s:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="local:TransmitOption" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <ObjectDataProvider x:Key="dotMatrixCommands"
                            MethodName="GetValues"
                            ObjectType="{x:Type s:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="communication:DotMatrixCommand" />
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>

        <Storyboard x:Key="animateOpacityToOne"
                            PresentationOptions:Freeze="True">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <LinearDoubleKeyFrame KeyTime="00:00:0.2" Value="1" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        
        <Storyboard x:Key="animateOpacityToPointSeven"
                            PresentationOptions:Freeze="True">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <LinearDoubleKeyFrame KeyTime="00:00:0.2" Value="0.7" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        
        <Storyboard x:Key="animateOpacityToZero"
                            PresentationOptions:Freeze="True">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                <LinearDoubleKeyFrame KeyTime="00:00:0.2" Value="0" />
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        
    </Window.Resources>

    <Window.InputBindings>
        <KeyBinding Key="Left"
                    Command="{Binding MoveImageCommand}" 
                    CommandParameter="{x:Static local:ChangeDirection.Left}" />
        <KeyBinding Key="Right"
                    Command="{Binding MoveImageCommand}" 
                    CommandParameter="{x:Static local:ChangeDirection.Right}" />
        <KeyBinding Key="Up"
                    Command="{Binding MoveImageCommand}" 
                    CommandParameter="{x:Static local:ChangeDirection.Up}" />
        <KeyBinding Key="Down"
                    Command="{Binding MoveImageCommand}"
                    CommandParameter="{x:Static local:ChangeDirection.Down}" />
        <KeyBinding Key="Left"
                    Modifiers="Ctrl"
                    Command="{Binding ChangeFrameCommand}"
                    CommandParameter="{x:Static local:ChangeDirection.Left}" />
        <KeyBinding Key="Right"
                    Modifiers="Ctrl"
                    Command="{Binding ChangeFrameCommand}"
                    CommandParameter="{x:Static local:ChangeDirection.Right}" />
        <KeyBinding Key="L"
                    Modifiers="Ctrl"
                    Command="{Binding Path=ClearCurrentFrameCommand}" />
        <KeyBinding Key="Q"
                    Modifiers="Ctrl"
                    Command="{Binding Path=DeleteFrameCommand}" />
        <KeyBinding Key="I"
                    Modifiers="Ctrl"
                    Command="{Binding Path=ImportFrameOrFramesCommand}" />
        <KeyBinding Key="E"
                    Modifiers="Ctrl"
                    Command="{Binding Path=ExportFrameCommand}" />
        <KeyBinding Key="E"
                    Modifiers="Alt"
                    Command="{Binding Path=ExportFramesCommand}" />
        <KeyBinding Key="S"
                    Modifiers="Ctrl"
                    Command="{Binding Path=SendFrameToPinMatrixCommand}" />
        <KeyBinding Key="S"
                    Modifiers="Alt"
                    Command="{Binding Path=SendFramesToPinMatrixCommand}" />
        <KeyBinding Key="N"
                    Modifiers="Ctrl"
                    Command="{Binding Path=AddNewFrameCommand}"
                    CommandParameter="{StaticResource False}"/>
        <KeyBinding Key="D"
                    Modifiers="Ctrl"
                    Command="{Binding Path=AddNewFrameCommand}"
                    CommandParameter="{StaticResource True}"/>
    </Window.InputBindings>
    
    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="32" 
                    ResizeBorderThickness="{x:Static SystemParameters.WindowResizeBorderThickness}" />
    </WindowChrome.WindowChrome>

    <Window.DataContext>
        <local:MainWindowViewModel />
    </Window.DataContext>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="36" />
            <RowDefinition Height="110" />
            <RowDefinition Height="*" />
            <RowDefinition Height="50" />
        </Grid.RowDefinitions>
        
        <!-- Custom title bar-->
        <components:CustomTitleBar Grid.Row="0" 
                                   ApplicationDescription="DotMatrixAnimationDesigner tool"
                                   ShowMaximizeButton="true"
                                   TitleBarButtonPressed="TitleBarButtonPressed" />

        <!-- Top row -->
        <Grid Grid.Row="1" 
              Margin="10,0,10,10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="2*" />
            </Grid.ColumnDefinitions>

            <!-- Connection control and dimension settings -->
            <StackPanel Orientation="Vertical"
                        Grid.Column="0"
                        VerticalAlignment="Bottom"
                        Margin="10,0,0,0">

                <!-- Network interfaces -->
                <StackPanel Orientation="Horizontal">
                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                               FontSize="9"
                               Text="Network interface:"
                               Margin="0,4,10,0"/>
                    <ComboBox Style="{StaticResource ComboBoxStyle}"
                              ItemsSource="{Binding Path=LocalNetworkInterfaces}"
                              SelectedItem="{Binding Path=SelectedNetworkInterface}"
                              FontSize="9"/>
                </StackPanel>

                <!-- Connection information -->
                <StackPanel x:Name="connectionInformationPanel"
                            Orientation="Horizontal"
                            HorizontalAlignment="Left"
                            Margin="0,0,0,15">

                    <StackPanel Orientation="Vertical"
                                Margin="0,10,10,0">
                        <TextBlock FontSize="9">
                            <TextBlock.Style>
                                <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                                    <Setter Property="Text" Value="Pin matrix target unknown" />
                                    <Setter Property="ToolTip" Value="Scan network to locate dot matrix server" />
                                    <Setter Property="Foreground" Value="{StaticResource MainErrorColor}" />
                                    <Setter Property="FontWeight" Value="Bold" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsScanningNetwork}" Value="True">
                                            <Setter Property="Text" Value="Scanning network..." />
                                            <Setter Property="ToolTip" Value="Listening for UDP broadcasts on local network..." />
                                            <Setter Property="Foreground" Value="{StaticResource MainInfoColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.NotConnected}">
                                            <Setter Property="Text" Value="{Binding Path=Connection.ConnectionString, StringFormat={}Not connected to {0}}" />
                                            <Setter Property="Foreground" Value="{StaticResource MainTextColor}" />
                                            <Setter Property="ToolTip" Value="Connect to the local dot matrix server to start sending frames" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Connecting}">
                                            <Setter Property="Text" Value="Connecting..." />
                                            <Setter Property="ToolTip" Value="Connecting to local dot matrix server..." />
                                            <Setter Property="Foreground" Value="{StaticResource MainInfoColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Connected}">
                                            <Setter Property="Text" Value="{Binding Path=Connection.ConnectionString, StringFormat={}Connected to {0}}" />
                                            <Setter Property="ToolTip" Value="Connected to target" />
                                            <Setter Property="Foreground" Value="{StaticResource MainSuccessColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Sending}">
                                            <Setter Property="Text" Value="Sending..." />
                                            <Setter Property="ToolTip" Value="Sending frame data to target" />
                                            <Setter Property="Foreground" Value="{StaticResource MainInfoColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.ConnectionFailed}">
                                            <Setter Property="Text" Value="{Binding Path=Connection.ConnectionString, StringFormat={}Connection to {0} failed}" />
                                            <Setter Property="ToolTip" Value="{Binding Path=Connection.LastConnectionErrorMessage}" />
                                            <Setter Property="Foreground" Value="{StaticResource MainErrorColor}" />
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Path=UdpListener.LastScanSuccessful}" Value="False">
                                            <Setter Property="Text" Value="Last network scan failed" />
                                            <Setter Property="ToolTip" Value="{Binding Path=UdpListener.LastErrorMessage}" />
                                            <Setter Property="Foreground" Value="{StaticResource MainWarningColor}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                        <TextBlock  Style="{StaticResource MainTextBlockStyle}"
                                    FontSize="9"
                                    Text="{Binding Path=Connection.TransmissionProgressMessage}"
                                    Margin="0,10,0,0" />
                    </StackPanel>

                    <Border Background="{StaticResource BackgroundColorDarkerShade}"
                            CornerRadius="3">

                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Setter Property="Opacity" Value="0" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ElementName=connectionInformationPanel, Path=IsMouseOver}"  Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard Storyboard="{StaticResource animateOpacityToOne}" />
                                        </DataTrigger.EnterActions>
                                        <DataTrigger.ExitActions>
                                            <BeginStoryboard Storyboard="{StaticResource animateOpacityToZero}" />
                                        </DataTrigger.ExitActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>
                        <StackPanel Orientation="Horizontal">
                            <TextBlock FontSize="9"
                                       Text="UDP listen port:"
                                       FontStyle="Italic"
                                       Margin="5,18,5,0">
                                <TextBlock.Style>
                                    <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                                        <Setter Property="Opacity" Value="0" />
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=connectionInformationPanel, Path=IsMouseOver}" Value="True" />
                                                    <Condition Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.ConnectionParametersUnknown}" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.EnterActions>
                                                    <BeginStoryboard Storyboard="{StaticResource animateOpacityToPointSeven}" />
                                                </MultiDataTrigger.EnterActions>
                                                <MultiDataTrigger.ExitActions>
                                                    <BeginStoryboard Storyboard="{StaticResource animateOpacityToZero}" />
                                                </MultiDataTrigger.ExitActions>
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.ConnectionParametersUnknown}">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsScanningNetwork}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBlock.Style>
                            </TextBlock>
                            <TextBox>
                                <TextBox.Text>
                                    <Binding Path="UdpListenPort"  UpdateSourceTrigger="PropertyChanged" >
                                        <Binding.ValidationRules>
                                            <components:RangeValidationRule MinExclusive="0"
                                                                        MaxInclusive="65535" />
                                        </Binding.ValidationRules>
                                    </Binding>
                                </TextBox.Text>
                                <TextBox.Style>
                                    <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource widthAndHeightInputBox}">
                                        <Setter Property="Opacity" Value="0" />
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="Height" Value="15" />
                                        <Setter Property="Margin" Value="0,0,0,12" />
                                        <Style.Triggers>
                                            <MultiDataTrigger>
                                                <MultiDataTrigger.Conditions>
                                                    <Condition Binding="{Binding ElementName=connectionInformationPanel, Path=IsMouseOver}" Value="True" />
                                                    <Condition Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.ConnectionParametersUnknown}" />
                                                </MultiDataTrigger.Conditions>
                                                <MultiDataTrigger.EnterActions>
                                                    <BeginStoryboard Storyboard="{StaticResource animateOpacityToPointSeven}" />
                                                </MultiDataTrigger.EnterActions>
                                                <MultiDataTrigger.ExitActions>
                                                    <BeginStoryboard Storyboard="{StaticResource animateOpacityToZero}" />
                                                </MultiDataTrigger.ExitActions>
                                            </MultiDataTrigger>
                                            <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.ConnectionParametersUnknown}">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsScanningNetwork}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </TextBox.Style>
                            </TextBox>
                            <Button>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonSmallStyle}">
                                        <Setter Property="Opacity" Value="0" />
                                        <Setter Property="Content" Value="Scan" />
                                        <Setter Property="Margin" Value="5,0,5,0" />
                                        <Setter Property="ToolTip" Value="Click to scan network for DotMatrix server" />
                                        <Setter Property="Height" Value="20" />
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Setter Property="Command" Value="{Binding Path=ScanNetworkCommand}" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding ElementName=connectionInformationPanel, Path=IsMouseOver}"  Value="True">
                                                <DataTrigger.EnterActions>
                                                    <BeginStoryboard Storyboard="{StaticResource animateOpacityToPointSeven}" />
                                                </DataTrigger.EnterActions>
                                                <DataTrigger.ExitActions>
                                                    <BeginStoryboard Storyboard="{StaticResource animateOpacityToZero}" />
                                                </DataTrigger.ExitActions>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=IsScanningNetwork}" Value="True">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Connecting}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Sending}">
                                                <Setter Property="Visibility" Value="Collapsed" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.NotConnected}">
                                                <Setter Property="Content" Value="Connect" />
                                                <Setter Property="ToolTip" Value="Click to connect to dot matrix server" />
                                                <Setter Property="Command" Value="{Binding Path=ConnectOrDisconnectToPinMatrixCommand}" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Connected}">
                                                <Setter Property="Content" Value="Disconnect" />
                                                <Setter Property="ToolTip" Value="Click to disconnect from dot matrix server" />
                                                <Setter Property="Command" Value="{Binding Path=ConnectOrDisconnectToPinMatrixCommand}" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>
                            <components:LoadingSpinner ControlSize="3"
                                                        Margin="15,1,10,0" 
                                                        ToolTip="Scanning...">
                                <components:LoadingSpinner.Style>
                                    <Style TargetType="{x:Type components:LoadingSpinner}">
                                        <Setter Property="Visibility" Value="Collapsed" />
                                        <Setter Property="ToolTip" Value="Scanning..." />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Path=IsScanningNetwork}" Value="True">
                                                <Setter Property="Visibility" Value="Visible" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Connecting}">
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Setter Property="ToolTip" Value="Connecting..." />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Sending}">
                                                <Setter Property="Visibility" Value="Visible" />
                                                <Setter Property="ToolTip" Value="Sending..." />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </components:LoadingSpinner.Style>
                            </components:LoadingSpinner>
                        </StackPanel>
                    </Border>
                </StackPanel>

                <!-- Set dimensions -->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Left">

                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                        Text="Dimensions:"
                        FontWeight="Bold"
                        Margin="0,0,10,0"
                        VerticalAlignment="Bottom"/>

                    <TextBox x:Name="widthBox"
                            Style="{StaticResource widthAndHeightInputBox}">
                        <TextBox.Text>
                            <Binding Path="Width"  UpdateSourceTrigger="PropertyChanged" >
                                <Binding.ValidationRules>
                                    <components:RangeValidationRule MinExclusive="0"
                                                                MaxInclusive="40" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                        Text="x"
                        FontWeight="Bold"
                        Margin="5,0,5,0"
                        VerticalAlignment="Bottom"/>

                    <TextBox x:Name="heightBox"
                            Style="{StaticResource widthAndHeightInputBox}">
                        <TextBox.Text>
                            <Binding Path="Height"  UpdateSourceTrigger="PropertyChanged" >
                                <Binding.ValidationRules>
                                    <components:RangeValidationRule MinExclusive="0"
                                                                MaxInclusive="30" />
                                </Binding.ValidationRules>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <Button Content="Set"
                        Width="50"
                        Height="25"
                        Margin="10,0,0,0"
                        VerticalAlignment="Bottom"
                        Command="{Binding Path=SetDimensionsCommand}">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Setter Property="ToolTip" Value="Press to change the dimensions of the grid" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=widthBox}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="ToolTip" Value="Cannot change the dimensions of the grid - invalid value for width" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=(Validation.HasError), ElementName=heightBox}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="ToolTip" Value="Cannot change the dimensions of the grid - invalid value for heigth" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </StackPanel>

            <!-- Action buttons and transmit options -->
            <StackPanel Orientation="Vertical"
                        Grid.Column="1"
                        HorizontalAlignment="Right"
                        VerticalAlignment="Bottom">

                <!-- Send command button -->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Margin="0,0,4,6">
                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                               FontSize="9"
                               FontWeight="Bold"
                               Text="Command to send: "
                               Margin="0,12,0,0"/>

                    <ComboBox   x:Name="commandSelector"
                                Style="{StaticResource ComboBoxStyle}"
                                ItemsSource="{Binding Source={StaticResource dotMatrixCommands}}"
                                SelectedItem="{Binding Path=SelectedCommand, Mode=TwoWay}"
                                Width="150"
                                HorizontalContentAlignment="Right"
                                VerticalContentAlignment="Bottom"
                                FontSize="9"
                                Margin="0,0,10,0"/>

                    <Button Content="Send"
                            HorizontalAlignment="Right"
                            Margin="0,0,0,10"
                            Height="25"
                            Width="50"
                            Command="{Binding Path=SendDotMatrixCommandCommand}"
                            CommandParameter="{Binding Path=SelectedCommand}">

                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="ToolTip" Value="Cannot send command - not connected"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Connected}">
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Setter Property="ToolTip">
                                            <Setter.Value>
                                            <StackPanel Orientation="Horizontal">
                                                <TextBlock Text="Press to send the command " />
                                                    <TextBlock Text="{Binding Path=SelectedCommand}"
                                                                FontWeight="Bold"/>
                                                <TextBlock Text=" to target" />
                                            </StackPanel>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Sending}">
                                        <Setter Property="ToolTip" Value="Sending..." />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>

                <!-- Transmit option -->
                <StackPanel Orientation="Horizontal"
                            HorizontalAlignment="Right"
                            Margin="0,0,4,6">
                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                               FontSize="9"
                               FontStyle="Italic"
                               Text="Transmit as..."
                               Margin="5,3,5,0"/>

                    <ComboBox   Style="{StaticResource ComboBoxStyle}"
                                ItemsSource="{Binding Source={StaticResource transmitOptions}}"
                                SelectedValue="{Binding Path=TransmitOption, Mode=TwoWay}"
                                Width="120"
                                HorizontalContentAlignment="Right"
                                VerticalContentAlignment="Bottom"
                                FontSize="9" />
                </StackPanel>
                
                <!-- Action buttons -->
                <StackPanel Orientation="Horizontal">
                    <Button Style="{StaticResource ButtonPrimaryStyle}"
                            Content="Clear"
                            Command="{Binding Path=ClearCurrentFrameCommand}"
                            Width="70"
                            ToolTip="Press to clear the current frame [Ctrl + L]" />

                    <Button Content="Delete frame"
                            Command="{Binding Path=DeleteFrameCommand}"
                            Width="100"
                            Margin="10,0,10,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Setter Property="ToolTip" Value="Press to delete the current frame [Ctrl + Q]" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Container.TotalNumberOfFrames}" Value="1">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="ToolTip" Value="Cannot delete current frame - it is the only one" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Style="{StaticResource ButtonPrimaryStyle}"
                            Content="Import"
                            Command="{Binding Path=ImportFrameOrFramesCommand}"
                            Width="70"
                            ToolTip="Press to import a file [Ctrl + I]" />

                    <Button Style="{StaticResource ButtonPrimaryStyle}"
                            Content="Export frame"
                            Command="{Binding Path=ExportFrameCommand}"
                            Width="100"
                            Margin="10,0,10,0"
                            ToolTip="Press to export the current frame [Ctrl + E]">
                    </Button>

                    <Button Content="Export frames"
                            Command="{Binding Path=ExportFramesCommand}"
                            Width="100">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                                <Setter Property="IsEnabled" Value="True" />
                                <Setter Property="ToolTip" Value="Press to export all frames [Alt + E]" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Container.TotalNumberOfFrames}" Value="1">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Setter Property="ToolTip" Value="Cannot export multiple frames - there is only one" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Content="Send frame"
                            Command="{Binding Path=SendFrameToPinMatrixCommand}"
                            Width="100"
                            Margin="10,0,10,0">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="ToolTip" Value="Cannot send frame - not connected to a dot matrix server" />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Connected}">
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Setter Property="ToolTip">
                                            <Setter.Value>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="Press to transmit the current frame in " />
                                                    <TextBlock Text="{Binding Path=TransmitOption}"
                                                                    FontWeight="Bold"/>
                                                    <TextBlock Text=" format [Ctrl + S]" />
                                                </StackPanel>
                                            </Setter.Value>
                                        </Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Sending}">
                                        <Setter Property="ToolTip" Value="Sending..." />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <Button Content="Send frames"
                            Command="{Binding Path=SendFramesToPinMatrixCommand}"
                            Width="100">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="ToolTip" Value="Cannot send frame - not connected to a dot matrix server " />
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Connected}">
                                        <Setter Property="IsEnabled" Value="True" />
                                        <Setter Property="ToolTip" Value="Press to send all frames to target pin matrix [Alt + S]" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=TransmitOption}" Value="{x:Static local:TransmitOption.GameOfLifeConfig}">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Setter Property="ToolTip" Value="GameOfLifeConfig transmit format does not support multiple frames" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Container.TotalNumberOfFrames}" Value="1">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Setter Property="ToolTip" Value="Cannot send multiple frames - there is only one" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Path=Connection.Status}" Value="{x:Static communication:ConnectionStatus.Sending}">
                                        <Setter Property="IsEnabled" Value="False" />
                                        <Setter Property="ToolTip" Value="Sending..." />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </StackPanel>
        </Grid>

        <!-- Main grid -->
        <ItemsControl Grid.Row="2"
                      ItemsSource="{Binding Path=Container.Dots}"
                    HorizontalAlignment="Stretch"
                    VerticalAlignment="Stretch">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                    <UniformGrid Rows="{Binding Path=Container.GridHeight}" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <components:Dot Margin="1"
                                        DotIsChecked="{Binding Path=IsChecked, Mode=TwoWay}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

        <!-- Bottom control buttons -->
        <Grid Grid.Row="3"
            HorizontalAlignment="Stretch">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="3*" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <StackPanel Grid.Column="0"
                        HorizontalAlignment="Left"
                        Orientation="Horizontal"
                        Margin="10,10,0,0">

                <TextBlock  Text="Animation repeats:"
                            Margin="0,0,10,0"
                           VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                            <Setter Property="Foreground" Value="{StaticResource MainTextColor}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=TransmitOption}" Value="{x:Static local:TransmitOption.GameOfLifeConfig}">
                                    <Setter Property="Foreground" Value="{StaticResource MainTextMutedColor}"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBox>
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource widthAndHeightInputBox}">
                            <Setter Property="ToolTip" Value="The number of times to repeat the current animation. A value of 0 means 'repeat indefinitely'." />
                            <Setter Property="Margin" Value="0,0,0,10" />
                            <Setter Property="Height" Value="20" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Setter Property="IsEnabled" Value="True" />
                            <Setter Property="ToolTipService.ShowOnDisabled" Value="True" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=TransmitOption}" Value="{x:Static local:TransmitOption.GameOfLifeConfig}">
                                    <Setter Property="ToolTip" Value="Animation repeats is not relevant for GameOfLife configurations" />
                                    <Setter Property="IsEnabled" Value="False" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding Path="Container.NumberOfAnimationRepeats" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <components:RangeValidationRule MinExclusive="-1"
                                                                MaxInclusive="255" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </StackPanel>

            <StackPanel Grid.Column="1"
                        Orientation="Horizontal"
                        HorizontalAlignment="Center">

                <Button Command="{Binding Path=ChangeFrameCommand}"
                        CommandParameter="{x:Static local:ChangeDirection.Left}"
                        ToolTip="Press to go to previous frame [Ctrl + LeftArrow]">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                            <Setter Property="Content" Value="Go to previous frame" />
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Container.TotalNumberOfFrames}" Value="1">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <Button Style="{StaticResource ButtonPrimaryStyle}"
                        Content="Add empty frame"
                        Command="{Binding Path=AddNewFrameCommand}"
                        CommandParameter="{StaticResource False}"
                        Margin="10,0,10,0"
                        ToolTip="Press to add a new blank frame [Ctrl + N]" />

                <StackPanel Orientation="Vertical"
                            Margin="10,6,10,0">
                    <StackPanel.Style>
                        <Style TargetType="{x:Type StackPanel}">
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Container.TotalNumberOfFrames}" Value="1">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </StackPanel.Style>

                    <TextBlock Style="{StaticResource MainTextBlockStyle}"
                            Text="FRAME" 
                            FontSize="8"
                            HorizontalAlignment="Center"/>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                Text="{Binding Path=Container.SelectedFrame}" 
                                FontSize="20"/>
                        <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                Text="/" 
                                FontSize="15"
                                Margin="2,2,2,0"/>
                        <TextBlock Style="{StaticResource MainTextBlockStyle}"
                                Text="{Binding Path=Container.TotalNumberOfFrames}"
                                FontSize="20"/>
                    </StackPanel>
                </StackPanel>

                <Button Style="{StaticResource ButtonPrimaryStyle}"
                        Content="Duplicate frame"
                        Command="{Binding Path=AddNewFrameCommand}"
                        CommandParameter="{StaticResource True}"
                        Margin="10,0,10,0"
                        ToolTip="Press to duplicate the current frame [Ctrl + D]" />

                <Button Command="{Binding Path=ChangeFrameCommand}"
                        CommandParameter="{x:Static local:ChangeDirection.Right}"
                        ToolTip="Press to go to next frame [Ctrl + RightArrow]">
                    <Button.Style>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonPrimaryStyle}">
                            <Setter Property="Content" Value="Go to next frame" />
                            <Setter Property="Visibility" Value="Visible" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Container.TotalNumberOfFrames}" Value="1">
                                    <Setter Property="Visibility" Value="Collapsed" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>

            <StackPanel Grid.Column="2"
                        HorizontalAlignment="Right"
                        Orientation="Horizontal"
                        Margin="0,10,0,0">

                <TextBlock  Margin="0,0,10,0"
                           VerticalAlignment="Center">
                    <TextBlock.Style>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource MainTextBlockStyle}">
                            <Setter Property="Text" Value="Frame length:" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=TransmitOption}" Value="{x:Static local:TransmitOption.GameOfLifeConfig}">
                                    <Setter Property="Text" Value="Tick between ticks:" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBlock.Style>
                </TextBlock>
                <TextBox>
                    <TextBox.Style>
                        <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource widthAndHeightInputBox}">
                            <Setter Property="ToolTip" Value="The amount of time to show this frame. A value of 0 means 'as short as possible'." />
                            <Setter Property="Margin" Value="0,0,0,10" />
                            <Setter Property="Height" Value="20" />
                            <Setter Property="VerticalAlignment" Value="Center" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=TransmitOption}" Value="{x:Static local:TransmitOption.GameOfLifeConfig}">
                                    <Setter Property="ToolTip" Value="Time between Game of Life update ticks. A value of zero means 'as fast as possible'." />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                    <TextBox.Text>
                        <Binding Path="Container.SelectedFrameTime" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <components:RangeValidationRule MinExclusive="-1"
                                                                MaxInclusive="65535" />
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
                <TextBlock Style="{StaticResource MainTextBlockStyle}"
                           Text="ms"
                           Margin="5,0,10,0"
                           VerticalAlignment="Center"/>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
